using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.IO;
using System.Configuration;

using PdfSharp.Drawing;
using PdfSharp.Pdf;



namespace NSCC.Web.AwardsApplication.Classes
{
    public class PdfGenerator
    {

        protected XColor backColor;
        protected XColor backColor2;
        protected XColor shadowColor;
        protected double borderWidth;
        protected XPen borderPen;

        XGraphicsState state;
        private PdfDocument document;

        public void GeneratePdf(localhost.AwardSelection awardSelection, AwardApplication app)
        {
            document = new PdfDocument();
            document.Info.Title = "NSCC Award Application";
            document.Info.Author = "NSCC";
            PdfPage page = document.AddPage();
            XGraphics gfx = XGraphics.FromPdfPage(page);
            XFont font = new XFont("Verdana", 20, XFontStyle.Regular);

            gfx.DrawString("Hello, World!", font, XBrushes.Black, new XRect(0, 0, page.Width, page.Height), XStringFormats.Center);

            document.Save(ConfigurationManager.AppSettings["PDF_UPLOAD_FOLDER"] + "\\" + app.StudentNumber + "-" + awardSelection.Code + ".pdf");                
        }

        public void DrawTitle(PdfPage page, XGraphics gfx, string title)
        {
            XRect rect = new XRect(new XPoint(), gfx.PageSize);
            rect.Inflate(-10, -15);
            XFont font = new XFont("Verdana", 14, XFontStyle.Bold);
            gfx.DrawString(title, font, XBrushes.MidnightBlue, rect, XStringFormats.TopCenter);

            rect.Offset(0, 5);
            font = new XFont("Verdana", 8, XFontStyle.Italic);
            XStringFormat format = new XStringFormat();
            format.Alignment = XStringAlignment.Near;
            format.LineAlignment = XLineAlignment.Far;
            gfx.DrawString("Created with " + PdfSharp.ProductVersionInfo.Producer, font, XBrushes.DarkOrchid, rect, format);

            font = new XFont("Verdana", 8);
            format.Alignment = XStringAlignment.Center;
            gfx.DrawString(document.PageCount.ToString(), font, XBrushes.DarkOrchid, rect, format);

            document.Outlines.Add(title, page, true);            
        }

        public void BeginBox(XGraphics gfx, int number, string title)
        {
          const int dEllipse = 15;
          XRect rect = new XRect(0, 20, 300, 200);
          if (number % 2 == 0)
            rect.X = 300 - 5;
          rect.Y = 40 + ((number - 1) / 2) * (200 - 5);
          rect.Inflate(-10, -10);
          XRect rect2 = rect;
          rect2.Offset(this.borderWidth, this.borderWidth);
          gfx.DrawRoundedRectangle(new XSolidBrush(this.shadowColor), rect2, new XSize(dEllipse + 8, dEllipse + 8));
          XLinearGradientBrush brush = new XLinearGradientBrush(rect, this.backColor, this.backColor2, XLinearGradientMode.Vertical);
          gfx.DrawRoundedRectangle(this.borderPen, brush, rect, new XSize(dEllipse, dEllipse));
          rect.Inflate(-5, -5);

          XFont font = new XFont("Verdana", 12, XFontStyle.Regular);
          gfx.DrawString(title, font, XBrushes.Navy, rect, XStringFormats.TopCenter);

          rect.Inflate(-10, -5);
          rect.Y += 20;
          rect.Height -= 20;
          //gfx.DrawRectangle(XPens.Red, rect);

          this.state = gfx.Save();
          gfx.TranslateTransform(rect.X, rect.Y);
        }

        public void EndBox(XGraphics gfx)
        {
          gfx.Restore(this.state);
        }
    }
}